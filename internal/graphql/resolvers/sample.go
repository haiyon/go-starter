package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.47

import (
	"context"
	"fmt"
	"go-starter/internal/data/structs"
	"go-starter/internal/graphql/generated"
	"go-starter/internal/graphql/types"

	"github.com/jinzhu/copier"
)

// Hello is the resolver for the hello field.
func (r *queryResolver) Hello(ctx context.Context) (*types.Sample, error) {
	row, err := r.Svc.Hello(ctx, structs.Sample{})
	if err != nil {
		return nil, err
	}

	var sample types.Sample
	err = copier.Copy(&sample, row.Data)
	if err != nil {
		return nil, err
	}

	return &sample, nil
}

// Samples is the resolver for the samples field.
func (r *queryResolver) Samples(ctx context.Context) ([]*types.Sample, error) {
	panic(fmt.Errorf("not implemented: Samples - samples"))
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
